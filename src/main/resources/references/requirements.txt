1.消息体加入版本号，可以通过版本号对消息做特殊处理。比如：忽略某个版本的消息。
2.动态下发消费者生产者的配置。比如：动态增加Broker机器，生产者消费者可以动态感知。
3.消息事物处理。比如：订单系统需要将订单消息分别发送到库存系统，搜索系统，支付系统。如果其中某一步异常，回滚此消息。
4.发送失败的消息处理。比如：订单系统生成一笔订单，发送给其他系统时发生异常或者其他系统消费某一订单消息时异常，需要将消息丢到重试系统，
以可配置的方式设置重试策略。主要用于对业务系统临时处理不了的消息进行存放，然后再按照一定的策略投递给客户端处理。可以提供错误原因、
错误处理次数等查询。
5.测试github权限
6.监控系统。比如：错误监控，机器负载监控
7.日志采集存储。比如：生产者，消费者日志收集。
8.消息存储。比如：生产者发送的消息存储。mysql ——> 定期清理到HDFS？——> 大数据分析？分析某类消息数量对应的业务场景分析。
9.消息消费的形式。比如：AMQ是push的形式消费。有么有可能动态修改push/pull模式。如果消费者消费前需要做一些初始化操作，或者消费者在特定时间段消费，这样的场景pull模式更加合适
10.消息广播。
11.ActiveMQ扩容。主从同步
12.注册中心动态下发topic，生产者消费者无需知道具体Broker。当需要动态修改topic时，生产者消费者无需重启。
13.消息延迟发送。
14.MQ Cluster 负载均衡策略